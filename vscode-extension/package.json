{
  "name": "story-mode-vscode",
  "displayName": "Story Mode",
  "description": "AI-powered interactive storytelling and solo RPG tools for VSCode",
  "version": "0.1.0",
  "publisher": "jebcarter",
  "repository": {
    "type": "git",
    "url": "https://github.com/jebcarter-space/story-mode.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Machine Learning"
  ],
  "keywords": [
    "ai",
    "storytelling",
    "rpg",
    "writing",
    "creative",
    "llm"
  ],
  "activationEvents": [
    "onCommand:story-mode.continueText",
    "onCommand:story-mode.queryOracle",
    "onCommand:story-mode.queryOracleCustom",
    "onCommand:story-mode.rollDice",
    "onCommand:story-mode.generateSparks",
    "onCommand:story-mode.generateSparksCustom",
    "onCommand:story-mode.continueWithSparks",
    "onCommand:story-mode.continueWithSparksCustom",
    "onCommand:story-mode.configureSparkTables",
    "onCommand:story-mode.openTableManager",
    "onCommand:story-mode.executeWorkflow",
    "onCommand:story-mode.manageWorkflows",
    "onCommand:story-mode.workflowStatus",
    "onCommand:story-mode.configurationWizard",
    "onCommand:story-mode.createWorkbook",
    "onCommand:story-mode.editWorkbook",
    "onCommand:story-mode.deleteWorkbook",
    "onCommand:story-mode.manageWorkbooks",
    "onCommand:story-mode.createShelf",
    "onCommand:story-mode.editShelf",
    "onCommand:story-mode.deleteShelf",
    "onCommand:story-mode.createBook",
    "onCommand:story-mode.editBook",
    "onCommand:story-mode.deleteBook",
    "onCommand:story-mode.createChapter",
    "onCommand:story-mode.editChapter",
    "onCommand:story-mode.deleteChapter",
    "onCommand:story-mode.openChapter",
    "onView:storyModeExplorer"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "story-mode.continueText",
        "title": "Continue Text with AI",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.continueWithOracle",
        "title": "Continue with Oracle",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.queryOracle",
        "title": "Query Oracle",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.rollDice",
        "title": "Roll Dice",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.insertTemplate",
        "title": "Insert Template",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.continueWithTemplate",
        "title": "Continue with Template",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.showSuggestions",
        "title": "Show Smart Suggestions",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.openRepository",
        "title": "Open Repository Manager",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.createLibrary",
        "title": "Create Story Library",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.generateSparks",
        "title": "Sparks",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.continueWithSparks",
        "title": "Continue with Sparks",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.generateSparksCustom",
        "title": "Sparks: Select Tables",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.continueWithSparksCustom",
        "title": "Continue with Sparks: Select Tables",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.queryOracleCustom",
        "title": "Oracle: Select Tables",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.configureSparkTables",
        "title": "Configure Spark Tables",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.openTableManager",
        "title": "Visual Spark Table Manager",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.executeWorkflow",
        "title": "Execute Workflow",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.manageWorkflows",
        "title": "Manage Workflows",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.workflowStatus",
        "title": "Workflow Status",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.configurationWizard",
        "title": "Configuration Wizard",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.createWorkbook",
        "title": "Create Workbook",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.editWorkbook",
        "title": "Edit Workbook",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.deleteWorkbook",
        "title": "Delete Workbook",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.manageWorkbooks",
        "title": "Manage Workbooks",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.createShelf",
        "title": "Create Shelf",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.editShelf",
        "title": "Edit Shelf",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.deleteShelf",
        "title": "Delete Shelf",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.createBook",
        "title": "Create Book",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.editBook",
        "title": "Edit Book",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.deleteBook",
        "title": "Delete Book",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.createChapter",
        "title": "Create Chapter",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.editChapter",
        "title": "Edit Chapter",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.deleteChapter",
        "title": "Delete Chapter",
        "category": "Story Mode"
      },
      {
        "command": "story-mode.openChapter",
        "title": "Open Chapter",
        "category": "Story Mode"
      }
    ],
    "keybindings": [
      {
        "command": "story-mode.continueText",
        "key": "ctrl+shift+enter",
        "mac": "cmd+shift+enter",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.queryOracle",
        "key": "ctrl+shift+o",
        "mac": "cmd+shift+o",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.rollDice",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.continueWithTemplate",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.showSuggestions",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.generateSparks",
        "key": "ctrl+shift+k",
        "mac": "cmd+shift+k",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.continueWithSparks",
        "key": "ctrl+shift+alt+k",
        "mac": "cmd+shift+alt+k",
        "when": "editorTextFocus || (editorFocus && !inputFocus)"
      },
      {
        "command": "story-mode.openTableManager",
        "key": "ctrl+shift+alt+t",
        "mac": "cmd+shift+alt+t"
      },
      {
        "command": "story-mode.executeWorkflow",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w",
        "when": "editorTextFocus"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "storyModeExplorer",
          "name": "Story Mode",
          "when": "story-mode:enabled"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "story-mode",
          "title": "Story Mode",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "story-mode.createWorkbook",
          "when": "view == storyModeExplorer && viewItem == workbooks",
          "group": "inline"
        },
        {
          "command": "story-mode.createWorkbook",
          "when": "view == storyModeExplorer && viewItem == workbook-stack",
          "group": "inline"
        },
        {
          "command": "story-mode.editWorkbook",
          "when": "view == storyModeExplorer && viewItem == workbook",
          "group": "inline"
        },
        {
          "command": "story-mode.deleteWorkbook",
          "when": "view == storyModeExplorer && viewItem == workbook",
          "group": "inline"
        },
        {
          "command": "story-mode.createShelf",
          "when": "view == storyModeExplorer && viewItem == stories",
          "group": "inline"
        },
        {
          "command": "story-mode.createBook",
          "when": "view == storyModeExplorer && viewItem == shelf",
          "group": "inline"
        },
        {
          "command": "story-mode.editShelf",
          "when": "view == storyModeExplorer && viewItem == shelf",
          "group": "edit"
        },
        {
          "command": "story-mode.deleteShelf",
          "when": "view == storyModeExplorer && viewItem == shelf",
          "group": "edit"
        },
        {
          "command": "story-mode.createChapter",
          "when": "view == storyModeExplorer && viewItem == book",
          "group": "inline"
        },
        {
          "command": "story-mode.editBook",
          "when": "view == storyModeExplorer && viewItem == book",
          "group": "edit"
        },
        {
          "command": "story-mode.deleteBook",
          "when": "view == storyModeExplorer && viewItem == book",
          "group": "edit"
        },
        {
          "command": "story-mode.openChapter",
          "when": "view == storyModeExplorer && viewItem == chapter",
          "group": "inline"
        },
        {
          "command": "story-mode.editChapter",
          "when": "view == storyModeExplorer && viewItem == chapter",
          "group": "edit"
        },
        {
          "command": "story-mode.deleteChapter",
          "when": "view == storyModeExplorer && viewItem == chapter",
          "group": "edit"
        }
      ]
    },
    "configuration": {
      "title": "Story Mode",
      "properties": {
        "storyMode.defaultLLMProfile": {
          "type": "string",
          "default": "",
          "description": "Default LLM profile to use for text continuation"
        },
        "storyMode.defaultSystemPrompt": {
          "type": "string",
          "default": "",
          "description": "Default system prompt for AI interactions (overrides LLM profile defaults)"
        },
        "storyMode.defaultAuthorNote": {
          "type": "string",
          "default": "",
          "description": "Default author's note for AI interactions (overrides LLM profile defaults)"
        },
        "storyMode.autoSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save changes to story files"
        },
        "storyMode.maxContextLength": {
          "type": "number",
          "default": 4000,
          "description": "Maximum context length to send to LLM (in characters)"
        },
        "storyMode.repositoryPath": {
          "type": "string",
          "default": ".story-mode",
          "description": "Path to story mode repository folder"
        },
        "storyMode.sparkKeywordCount": {
          "type": "number",
          "default": 3,
          "description": "Number of keywords to generate for Sparks"
        },
        "storyMode.includeTableNames": {
          "type": "boolean",
          "default": false,
          "description": "Include source table names in Sparks output"
        },
        "storyMode.defaultTableEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the default keyword table"
        },
        "storyMode.oracleTables": {
          "type": "array",
          "default": [
            "default"
          ],
          "description": "Tables enabled for Oracle queries (uses all enabled tables if empty)"
        },
        "storyMode.sparksTables": {
          "type": "array",
          "default": [
            "default"
          ],
          "description": "Tables enabled for Sparks generation (uses all enabled tables if empty)"
        },
        "storyMode.enableStreaming": {
          "type": "boolean",
          "default": true,
          "description": "Enable streaming responses for smoother text generation"
        },
        "storyMode.streamingDelay": {
          "type": "number",
          "default": 50,
          "description": "Delay between token updates in milliseconds"
        },
        "storyMode.streamingFallback": {
          "type": "boolean",
          "default": true,
          "description": "Automatically fallback to non-streaming on persistent failures"
        },
        "storyMode.streamingMaxRetries": {
          "type": "number",
          "default": 2,
          "description": "Maximum retry attempts for streaming requests"
        },
        "storyMode.streamingTimeoutMs": {
          "type": "number",
          "default": 30000,
          "description": "Timeout for streaming requests in milliseconds"
        },
        "storyMode.streamingRetryDelayMs": {
          "type": "number",
          "default": 1000,
          "description": "Base delay between retry attempts in milliseconds"
        },
        "storyMode.streamingShowStatus": {
          "type": "boolean",
          "default": true,
          "description": "Show streaming status in the status bar"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.103.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "@types/node-fetch": "^2.6.13",
    "node-fetch": "^3.3.2",
    "yaml": "^2.3.4"
  }
}
